default namespace = "http://riboseinc.com/isoxml"

grammar {

start = iso_standard

iso_standard = 
  element iso-standard {
    title+,
    documentstatus,
    creator,
    language,
    script,
    documenttype,
    id,
    version?,
    copyright,
    sections
  }

language =
  element language { ( "en" | "fr" ) }

script =
  element script { "latn" }

version =
  element version {
    edition?,
    revdate?
  }

copyright = 
  element copyright {
    from, owner
}

from = element from { text }

owner = 
  element owner {
    owner_affiliation  
}

owner_affiliation = element affiliation { "ISO" }

id =
  element id {
    documentnumber,
    tc_documentnumber?
  }

creator =
  element creator { 
    attribute role { text },
    technical_committee,
    subcommittee?,
    workgroup?,
    secretariat?
  }

documenttype =
  element type {
     ("international-standard" | "technical-specification" | "technical-report" | "publicly-available-specification" | "international-workshop-agreement" | "guide" )
  }

documentstatus =
  element status {
     stage,
     substage?
  }

stage = 
  element stage {
    ("00" | "10" | "20" | "30" | "40" | "50" | "60" | "90" | "95" )
  }

substage = 
  element substage {
    ("00" | "20" | "60" | "90" | "92" | "93" | "98" | "99" )
  }

documentnumber = 
  element projectnumber { 
    attribute part { text }?,
    text 
   }

tc_documentnumber = 
  element tc_documentnumber { 
    text 
   }

technical_committee =
  element technical_committee {
    attribute number { text }?,
    text
  }

subcommittee =
  element subcommittee {
    attribute number { text }?,
    text
  }

workgroup =
  element workgroup {
    attribute number { text }?,
    text
  }

secretariat =
  element secretariat { text }

revdate =
  element revision_date { text }

copyright_year =
  element copyright_year { text }

edition =
  element edition { text }

title = 
  element title { 
    attribute language { text }, 
    title_intro?, title_main, title_part? 
}

title_intro =
  element title_intro { text }

title_main =
  element title_main { text }

title_part =
  element title_part { text }

sections =
  element sections {
    content, content?, 
    clause, references, terms, clause+, 
    annex*, references?
  }

content =
  element content { Content_Section }

content_subsection =
  element subsection { Content_Section }

Content_Section = 
    attribute id { xsd:ID }?,
    section_title?,
    ( BasicBlock+ |
      content_subsection+ )

clause =
  element clause { Clause_Section }

Clause_Section =
    attribute id { xsd:ID }?,
    section_title?,
    (
      BasicBlock+ |
       clause_subsection+
    )

clause_subsection =
  element subsection { Clause_Section }

references =
  element references {
    attribute id { xsd:ID }?,
    section_title?,
    ( iso_ref_title | reference )*,
    references*
}

iso_ref_title =
  element iso_ref_title { 
    attribute id { xsd:ID },
    isocode, (isodate, date_footnote?)?, isotitle 
  }

isocode =
  element isocode { 
    attribute allparts { "true" | "false" }?,
    text 
  }

isodate = 
  element isodate { text }

date_footnote =
  element date_footnote { text }

isotitle = 
  element isotitle { text }

terms = 
  element terms { 
    attribute id { xsd:ID }?,
    section_title?,
    # boilerplate
    para*, ul?,
    (termdef+ | terms? )
  }

termdef = 
  element termdef { 
    attribute id { xsd:ID }?,
    term, admitted_term*, termsymbol?, deprecated_term*,
    termdomain?, termdefinition, termnote*, termexample*, termref* 
  }

term = 
  element term { text }

admitted_term = 
  element admitted_term { text }

termsymbol = 
  element termsymbol { stem }

deprecated_term = 
  element deprecated_term { text }

termdomain = 
  element termdomain { text }

termdefinition =
  element termdefinition {
    ( para_no_fn | figure | formula )+
  }

termnote = 
  element termnote { (text | xref | eref)* }

termexample = 
  element termexample { text }

termref = 
  element termref { xref, (isosection, modification?)? }

isosection =
  element isosection { text }

modification =
  element modification { text }

BasicBlock = 
(para | table | note | formula | warning | ol | ul | dl | figure | quote | sourcecode | example)

clause_hanging_para =
  element subsection {
    attribute id { xsd:ID }?,
    section_title?,
    # allow hanging paragraphs in annexes: they introduce lists
    BasicBlock*,
    clause_hanging_para*
  }

quote =
  element quote {
    attribute id { xsd:ID }?,
    quote_source?,
    quote_author?,
    BasicBlock*
  }

quote_source =
  element source { CitationType }

quote_author =
  element author { CreatorInfo }


annex =
  element annex { 
    attribute id { xsd:ID }?,
    attribute subtype { "normative" | "informative" }?,
    section_title?,
    # allow hanging paragraphs in annexes: they introduce lists
    #( para | table | note | formula | warning | ol | ul | dl | figure | quote | sourcecode | review_note | example )*,
    BasicBlock*,
    clause_hanging_para*
  }

bibliography =
  element bibliography { 
    attribute id { xsd:ID }?,
    section_title?,
    (iso_ref_title | reference)+,
    bibliography*
  }

reference = 
  element reference { ref, para }

ref =
  element ref {
    attribute id { xsd:ID }?,
    text
  }

TextElement = 
  em | eref | strong | stem | sub | sup | tt | xref | br

para =
     element p {
       attribute align { ( "left" | "center" | "right" | "justified" ) }?,
       (text | TextElement | fn )*,
       review_note*
     }

para_no_fn =
     attribute align { ( "left" | "center" | "right" | "justified" )}?,
     element p {
       (text | TextElement )*,
       review_note*
     }

figure = 
  element figure {
    attribute src { text }?,
    attribute id { xsd:ID }?,
    tname?,
    fn*,
    dl?,
    figure*,
    note*
  }

sourcecode =
  element sourcecode {
    attribute id { xsd:ID }?,
    tname?,
    ( text | callout )*,
    colist?
  }

review_note =
  element review_note {
    attribute source { text }?,
    text
  }

callout =
  element callout {
    text
  }

colist = 
  element colist {
    annotation+
  }

annotation =
  element annotation {
    attribute id { xsd:ID }?,
    text
  }

fn =
  element fn { 
       (text | TextElement )*
     }

ol =
  element ol { 
    attribute type { text },
    li+ 
  }

ul = 
  element ul { li+ }

li =
  element li {
    #( para | table | note | formula | warning | ol | ul | dl | quote | sourcecode | review_note | example )+
    BasicBlock+
    # exclude figures?
  }

dl =
  element dl {
    (dt, dd)+
  }

dt =
  element dt {
    (text | TextElement )
  }

dd =
  element dd {
    #( para | table | note | formula | warning | ol | ul | dl | quote | sourcecode | review_note | example )*
    # exclude figures?
    BasicBlock+
  }

note =
  element note { 
    attribute id { xsd:ID }?,
    para+ 
  }

warning =
  element warning { 
    tname,
    para+ 
  }

formula =
  element formula { 
    attribute id { xsd:ID }?,
    stem,
    dl?
  }

example = 
  element example {
    attribute id { xsd:ID }?,
    ( para | formula | ol | ul | dl | quote | sourcecode | review_note )+
  }

xref =
  element xref { 
    attribute format { "footnote" | "inline" }?,
    attribute target { text },
    ( text | iso_ref )
  }

iso_ref =
  element iso_ref { isocode, (isodate, (isosection?)?)? }

eref =
  element eref { 
    attribute target { text },
    text 
  }

br =
  element br { empty }

em =
  element em { text }

strong =
  element strong { text }

stem =
  element stem { text }

sub =
  element sub { text }

sup =
  element sup { text }

tt =
  element tt { text }

table =
  element table {
    attribute id { xsd:ID }?,
    tname?, thead?, tbody, tfoot?, dl?, note*
  }

tname =
  element name { text }

section_title =
  element title { text }

thead =
  element thead { tr+ }

tbody =
  element tbody { tr+ }

tfoot =
  element tfoot { tr+ }

tr =
  element tr { (td | th)+ }

th =
  element th { 
    attribute colspan { text }?,
    attribute rowspan { text }?,
    attribute align { text }?,
    (text | TextElement | fn | para)* 
  }

td =
  element td { 
    attribute colspan { text }?,
    attribute rowspan { text }?,
    attribute align { text }?,
    (text | TextElement | fn | para)* 
  }

CreatorInfo =
    attribute role { text },
    fullname?, affiliation?, person_identifier*

publisher = 
  element publisher { CreatorInfo }
# a publisher has a subset of the roles of a creator

fullname =
  element fullname {
    prefix*, forename*, initial*, surname, addition*
}

prefix = element prefix { text }
initial = element initial { text }
addition = element addition { text }
surname = element surname { text }
forename = element forename { text }

affiliation =
  element affiliation { Organization }

Organization =  
    orgname, uri, address, org_identifier*

orgname =
  element name { text }

uri =
  element uri { text }

address =
  element address {
    # iso191606 TODO
    street+, city, state?, country, postcode?
}

street = element street { text }
city = element city { text }
state = element state { text }
country = element country { text }
postcode = element postcode { text }

person_identifier =
  element identifier {
    attribute type { ("isni" | "uri") },
    text
  }

org_identifier =
  element identifier {
    attribute type { ("orcid" | "uri") },
    text
  }

CitationType = 
    destination, source, date

# source is the text element that the citation belongs to; this is in context the text element
# the citation occurs in (or next to), so it does not need to be included in a schema

date = element date { string }

destination =
  element destination {
    bibLocality, bibItem
}
# well, no, that's conceptual model thinking. destination contains a pointer to a bibItem,
# not the bibItem itself. The bibItem appers in the document model only in the references,
# never in the citation.

bibLocality =
  element bibLocality {
    section, pclause, part, pparagraph, chapter, page, whole
    # all of these need to be optional (in reality, choice of one or more,
    # with page and whole mutually exclusive to the remainder)
}

section = element section { text }
pclause = element clause { text }
pparagraph = element paragraph { text }
# would be nice to use unique name, both clause and paragraph already used elsewhere. (clauseref, pararef?)
# That applies for most ambiguous element names,
# though am ok for "name" to be reused, it always means the same thing
part = element part { text }
chapter = element chapter { text }
page = element page { text }
whole = element whole { text }

bibItem =
  element bibItem { BibItemType }

BibItemType =
     attribute type { ( "article" | "book" | "booklet" | "conference" | "manual" |
                      "proceedings" | "presentation" | "thesis" | "techreport" |
                      "standard" | "unpublished" ) }?,
    bname, source, publishDate, code, accessedDate, creator*, publisher, edition,
    comments, partOf*, creationDate?, language?, script?
    # type has been mentioned twice, and not identified as of enum type BibItemType
    # what is code for?

bname = element name { text }
source = element source { text }
# is a uri throughout
publishDate = element publishDate { text }
code = element code { text }
accessedDate = element accessedDate { text }
creationDate = element creationDate { text }
comments = element comments { string }
# consider making this paragraph[1..*]

partOf = element partOf { BibItemType }


}


